(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{367:function(e,a,t){"use strict";t.r(a);var r=t(18),n=function(e){e.options.__data__block__={mermaid_1a962850:"graph LR\n  data[Your Data] --\x3e table[Table]\n  data --\x3e grap[Graph]\n  data --\x3e geo[Map]\n",mermaid_382ee169:'graph LR\n\n  subgraph Data Package\n    resource[Resource]\n    view[View]\n    resource -.-> view\n  end\n\n  view --\x3e toolchain\n  toolchain --\x3e svg["Rendered Graph (SVG)"]\n  toolchain --\x3e table[Table]\n  toolchain --\x3e map[Map]\n',mermaid_382ee1c4:'graph TD\n  pre[Pre-cursor views e.g. Recline] --bespoke conversions--\x3e dpv[Data Package Views]\n  dpv --"normalize (correct any variations and ensure key fields are present)"--\x3e dpvn["Data Package Views<br />(Normalized)"]\n  dpvn --"compile in resource & data ([future] do transforms)"--\x3e dpvnd["Self-Contained View<br />(All data and schema inline)"]\n  dpvnd --compile to native spec--\x3e plotly[Plotly Spec]\n  dpvnd --compile to native spec--\x3e vega[Vega Spec]\n  plotly --render--\x3e html[svg/png/etc]\n  vega --render--\x3e html\n',mermaid_382ee1e3:'graph LR\n  inplotly["Plotly DP Spec"] --\x3e plotly[Plotly JSON]\n  simple[Simple Spec] --\x3e plotly\n  simple .-> vega[Vega JSON]\n  invega[Vega DP Spec] --\x3e vega\n  vegalite[Vega Lite DP Spec] --\x3e vega\n  recline[Recline] .-> simple\n  plotly --plotly lib--\x3e svg[SVG / PNG]\n  vega --vega lib--\x3e svg\n  \n  classDef implemented fill:lightblue,stroke:#333,stroke-width:4px;\n  class recline,simple,plotly,svg,inplotly,invega,vega implemented;\n',mermaid_382ee245:"graph LR\n\n  geo[Geo Resource] --\x3e map\n  map[Map Spec] --\x3e leaflet[Leaflet]\n  \n  classDef implemented fill:lightblue,stroke:#333,stroke-width:4px;\n  class geo,map,leaflet implemented;\n",mermaid_64a570e6:"graph LR\n  resource[Tabular Resource] --\x3e table\n  table[Table Spec] --\x3e handsontable[HandsOnTable]\n  table --\x3e html[Simple HTML Table]\n  \n  classDef implemented fill:lightblue,stroke:#333,stroke-width:4px;\n  class resource,table,handsontable implemented;\n",mermaid_64a57062:'  graph TD\n\n  url["metadata URL passed from back-end"]\n  dp-js[datapackage-js]\n  dprender[datapackage-render-js]\n  table["table view"]\n  chart["graph view"]\n  hot[HandsOnTable]\n  map[LeafletMap]\n  vega[Vega]\n  plotly[Plotly]\n  browser[Browser]\n\n  url --\x3e dp-js\n  dp-js --fetched dp--\x3e dprender\n  dprender --spec--\x3e table\n  table --1..n--\x3e hot\n  dprender --geojson--\x3e map\n  dprender --spec--\x3e chart\n  chart --0..n--\x3e vega\n  chart --0..n--\x3e plotly\n  hot --table--\x3e browser\n  map --map--\x3e browser\n  vega --graph--\x3e browser\n  plotly --graph--\x3e browser\n'}},s=Object(r.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"views"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#views"}},[e._v("#")]),e._v(" Views")]),e._v(" "),t("p",[e._v("Producers and consumers of data want to have data presented in tables and graphs – “views” on the data. They want this for a range of reasons, from simple eyeballing to drawing out key insights.")]),e._v(" "),t("Mermaid",{attrs:{id:"mermaid_1a962850",graph:e.$dataBlock.mermaid_1a962850}}),t("p",[e._v("To achieve this we need to provide:")]),e._v(" "),t("ul",[t("li",[e._v("A tool-chain to create these views from the data.")]),e._v(" "),t("li",[e._v("A descriptive language for specifying views such as tables, graphs, map.")])]),e._v(" "),t("p",[e._v("These requirements are addressed through the introduction of Data Package “Views” and associated tooling.")]),e._v(" "),t("Mermaid",{attrs:{id:"mermaid_382ee169",graph:e.$dataBlock.mermaid_382ee169}}),t("p",[e._v("This section describes the details of how we support "),t("RouterLink",{attrs:{to:"/publishers/views/"}},[e._v("Data Package Views")]),e._v(" in the DataHub.")],1),e._v(" "),t("p",[e._v("It consists of two parts, the first describes the general tool chain we have. The second part describes how we use that to generate graphs in the showcase page.")]),e._v(" "),t("p",[t("strong",[e._v("Quick Links")])]),e._v(" "),t("ul",[t("li",[t("RouterLink",{attrs:{to:"/publishers/views/"}},[e._v("Data Package Views introduction and spec")])],1),e._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/frictionlessdata/datapackage-render-js",target:"_blank",rel:"noopener noreferrer"}},[e._v("datapackage-render-js"),t("OutboundLink")],1),e._v(" - this is the library that implements conversion from the data package views spec to vega/plotly and then svg or png")])]),e._v(" "),t("h2",{attrs:{id:"the-tool-chain"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-tool-chain"}},[e._v("#")]),e._v(" The Tool Chain")]),e._v(" "),t("p",[t("em",[t("strong",[e._v("Figure 1: From Data Package View Spec to Rendered output")])])]),e._v(" "),t("Mermaid",{attrs:{id:"mermaid_382ee1c4",graph:e.$dataBlock.mermaid_382ee1c4}}),t("p",[t("strong",[e._v("IMPORTANT")]),e._v(": an important “convention” we adopt for the “compiling-in” of data is that resource data should be inlined into an "),t("code",[e._v("_values")]),e._v(" attribute. If the data is tabular this attribute should be an array of "),t("em",[e._v("arrays")]),e._v(" (not objects).")]),e._v(" "),t("h3",{attrs:{id:"graphs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#graphs"}},[e._v("#")]),e._v(" Graphs")]),e._v(" "),t("p",[t("em",[t("strong",[e._v("Figure 2: Conversion paths")])])]),e._v(" "),t("Mermaid",{attrs:{id:"mermaid_382ee1e3",graph:e.$dataBlock.mermaid_382ee1e3}}),t("p",[e._v("Notes:")]),e._v(" "),t("ul",[t("li",[e._v("Implemented paths are shown in lightblue - code for this is in "),t("a",{attrs:{href:"https://github.com/frictionlessdata/datapackage-render-js",target:"_blank",rel:"noopener noreferrer"}},[e._v("datapackage-render-js"),t("OutboundLink")],1)]),e._v(" "),t("li",[e._v("Left-most column (Recline): pre-specs that we can convert to our standard specs")]),e._v(" "),t("li",[e._v("Second-from-left column: DP View spec types.")]),e._v(" "),t("li",[e._v("Second-from-right column: the graphing libraries we can use (which all output to SVG)")])]),e._v(" "),t("h3",{attrs:{id:"geo-support"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#geo-support"}},[e._v("#")]),e._v(" Geo support")]),e._v(" "),t("p",[t("strong",[e._v("Note")]),e._v(": support for customizing map is limited to JS atm - there is no real map “spec” in JSON yet beyond the trivial version.")]),e._v(" "),t("p",[t("strong",[e._v("Note")]),e._v(": vega has some geo support but geo here means full geojson style mapping.")]),e._v(" "),t("Mermaid",{attrs:{id:"mermaid_382ee245",graph:e.$dataBlock.mermaid_382ee245}}),t("h3",{attrs:{id:"table-support"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#table-support"}},[e._v("#")]),e._v(" Table support")]),e._v(" "),t("Mermaid",{attrs:{id:"mermaid_64a570e6",graph:e.$dataBlock.mermaid_64a570e6}}),t("h3",{attrs:{id:"summary"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#summary"}},[e._v("#")]),e._v(" Summary")]),e._v(" "),t("p",[t("em",[t("strong",[e._v("Figure 3: From Data Package View to Rendered output flow (richer version of diagram 1)")])])]),e._v(" "),t("img",{attrs:{src:"https://docs.google.com/drawings/d/1M_6Vcal4PPSHpuKpzJQGvRUbPb5yeaAdRHomIIbfnlY/pub?w=790&h=1402"}}),e._v(" "),t("h2",{attrs:{id:"views-in-the-showcase"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#views-in-the-showcase"}},[e._v("#")]),e._v(" Views in the Showcase")]),e._v(" "),t("p",[e._v("To render Data Packages in browsers we use DataHub views written in JavaScript. The module implemented in ReactJS framework and it can render tables, maps and various graphs using third-party libraries.")]),e._v(" "),t("p",[e._v("Implementing code can be found in:")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://github.com/frictionlessdata/dpr-js",target:"_blank",rel:"noopener noreferrer"}},[e._v("dpr-js repo"),t("OutboundLink")],1),e._v(" - which in turn depends on "),t("a",{attrs:{href:"https://github.com/frictionlessdata/datapackage-render-js",target:"_blank",rel:"noopener noreferrer"}},[e._v("datapackage-render-js"),t("OutboundLink")],1)])]),e._v(" "),t("Mermaid",{attrs:{id:"mermaid_64a57062",graph:e.$dataBlock.mermaid_64a57062}}),t("p",[e._v("Notice that DataHub views render a table view per tabular resource. If GeoJSON resource is given, it renders a map. Graph views should be specified in "),t("code",[e._v("views")]),e._v(" property of a Data Package.")]),e._v(" "),t("h2",{attrs:{id:"appendix"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#appendix"}},[e._v("#")]),e._v(" Appendix")]),e._v(" "),t("p",[e._v("There is a separate page with "),t("RouterLink",{attrs:{to:"/developers/views-research/"}},[e._v("additional research material regarding views specification and tooling")]),e._v(".")],1)],1)}),[],!1,null,null,null);"function"==typeof n&&n(s);a.default=s.exports}}]);