apiVersion: batch/v1
kind: Job
metadata:
  name: migrate-database
spec:
  template:
    spec:
      containers:
        - name: postgres
          image: postgres:9.6.19-alpine
          command: ["sh", "/files/migrate.sh"]
          envFrom:
            - secretRef:
                name: envvars
          volumeMounts:
            - name: files
              mountPath: /files
      restartPolicy: Never
      volumes:
        - name: files
          configMap:
            name: files
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: files
data:
  basic_provisioning.sql: |
    DROP ROLE "ckan";
    DROP ROLE "ckan-datastore";
    DROP ROLE "ckan-datastore-ro";
    DROP DATABASE "ckan";
    DROP DATABASE "ckan-datastore";

    CREATE ROLE "ckan" WITH LOGIN PASSWORD 'ckan' NOSUPERUSER NOCREATEDB NOCREATEROLE;
    CREATE DATABASE "ckan";

    CREATE ROLE "ckan-datastore" WITH LOGIN PASSWORD 'ckan-datastore' NOSUPERUSER NOCREATEDB NOCREATEROLE;
    CREATE DATABASE "ckan-datastore";

    CREATE ROLE "ckan-datastore-ro" WITH LOGIN PASSWORD 'ckan-datastore-ro' NOSUPERUSER NOCREATEDB NOCREATEROLE;

    GRANT "ckan" to "default";
    GRANT "ckan-datastore" to "default";
    GRANT "ckan-datastore-ro" to "default";

  migrate.sh: |
    cd /files
    psql $DX_DEV_URI -f basic_provisioning.sql
    sh migrate_database.sh $CKAN_CLOUD_CKAN_URI $DX_DEV_URI/ckan &
    sh migrate_database.sh $CKAN_CLOUD_DATASTORE_URI $DX_DEV_URI/ckan-datastore &

  migrate_database.sh: |
    pg_dump --format=plain --no-owner --no-acl $1 | psql $2;
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: envvars
stringData:
  CKAN_CLOUD_DATASTORE_URI: "postgresql://ckan-staging-datastore:password@origin-ip:5432/ckan-staging-datastore"
  CKAN_CLOUD_CKAN_URI: "postgresql://ckan-staging:password@origin-ip:5432/ckan-staging"
  DX_DEV_URI: "postgresql://default:password@destination-ip:5432"
