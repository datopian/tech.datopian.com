(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{364:function(e,a,t){"use strict";t.r(a);var r=t(18),n=function(e){e.options.__data__block__={mermaid_382ee145:"graph TD\n\ncli((CLI fa:fa-user))\nauth[Auth Service]\ncli --login--\x3e auth\n\ncli --store--\x3e raw[Raw Store API<br>+ Storage]  \n\ncli --package-info--\x3e pipeline-store\nraw --data resource--\x3e pipeline-runner\n\npipeline-store -.generate.-> pipeline-runner\n\npipeline-runner --\x3e package[Package Storage]\npackage --api--\x3e frontend[Frontend]\nfrontend --\x3e user[User fa:fa-user]\n\npackage -.publish.->metastore[MetaStore]\npipeline-store -.publish.-> metastore[MetaStore]\nmetastore[MetaStore] --api--\x3e frontend\n",mermaid_382ee147:'graph TD\n\nsubgraph Web Frontend\n  frontend[Frontend Webapp]\n  browse[Browse & Search]\n  login[Login & Signup]\n  view[Views Renderer]\n  frontend --\x3e browse\n  frontend --\x3e login\nend\n\nsubgraph Users and Permissions\n  user[User]\n  permissions[Permissions]\n  authapi[Auth API]\n  authzapi[Authorization API]\n  login --\x3e authapi\n  authapi --\x3e user\n  authzapi --\x3e permissions\nend\n\nsubgraph PkgStore\n  bitstore["PkgStore (S3)"]\n  bitstoreapi[PkgStore API<br/>put,get]\n  bitstoreapi --\x3e bitstore\n  browse --\x3e bitstoreapi\nend\n\nsubgraph MetaStore\n  metastore["MetaStore (ElasticSearch)"]\n  metaapi[MetaStore API<br/>read,search,import]\n  metaapi --\x3e metastore\n  browse --\x3e metaapi\nend\n\nsubgraph CLI\n  cli[CLI]\nend\n',mermaid_382ee23f:"graph TD\n\nsubgraph MetaStore\nmetaapi[MetaStore API]\nmetadb[MetaStore DB fa:fa-database]\nend\n\nmetadb --\x3e metaapi\n\nassembler[Assembler] --should this by via api or direct to DB??--\x3e metadb\n\nmetaapi --\x3e frontend[Frontend fa:fa-user]\nmetaapi --\x3e cli[CLI fa:fa-user]\n\nfrontend -.no dp stuff only access.-> metaapi\n",mermaid_64a570da:"graph TD\n\npkg[Data Package]\nresource[Resource]\nfile[File]\nversion[Version]\nuser[User]\npublisher[Publisher]\n\nsubgraph Package\n  pkg --0..*--\x3e resource\n  resource --1..*--\x3e file\n  pkg --\x3e version\nend\n\nsubgraph Profile\n  publisher --1..*--\x3e user\n  publisher --0..*--\x3e pkg\nend\n"}},s=Object(r.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"platform"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#platform"}},[e._v("#")]),e._v(" Platform")]),e._v(" "),t("p",[e._v("The DataHub platform follows a service oriented architecture. It is built from a set of loosely coupled components, each performing distinct functions related to the platform as a whole.")]),e._v(" "),t("h2",{attrs:{id:"architecture"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#architecture"}},[e._v("#")]),e._v(" Architecture")]),e._v(" "),t("p",{staticStyle:{"text-align":"center"}},[e._v("Fig 1: Data Flow through the system")]),e._v(" "),t("Mermaid",{attrs:{id:"mermaid_382ee145",graph:e.$dataBlock.mermaid_382ee145}}),t("p",{staticStyle:{"text-align":"center"}},[e._v("Fig 2: Components Perspective - from the Frontend")]),e._v(" "),t("Mermaid",{attrs:{id:"mermaid_382ee147",graph:e.$dataBlock.mermaid_382ee147}}),t("h2",{attrs:{id:"information-architecture"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#information-architecture"}},[e._v("#")]),e._v(" Information Architecture")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("datahub.io            # frontend\napi.datahub.io        # API - see API page for structure\nrawstore.datahub.io   # rawstore - raw bitstore\npkgstore.datahub.io   # pkgstore - package bitstore\n")])])]),t("p",[e._v("## Components")]),e._v(" "),t("h3",{attrs:{id:"frontend-web-application"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#frontend-web-application"}},[e._v("#")]),e._v(" Frontend Web Application")]),e._v(" "),t("p",[e._v("Core part of platform - Login & Sign-Up and Browse & Search Datasets")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/datahq/frontend",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/datahq/frontend"),t("OutboundLink")],1)]),e._v(" "),t("h4",{attrs:{id:"views-and-renderer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#views-and-renderer"}},[e._v("#")]),e._v(" Views and Renderer")]),e._v(" "),t("p",[e._v("JS Library responsible for visualization and views.")]),e._v(" "),t("p",[e._v("See "),t("a",{attrs:{href:"/developers/views"}},[e._v("views")]),e._v(" section for more about Views.")]),e._v(" "),t("h3",{attrs:{id:"assembler"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#assembler"}},[e._v("#")]),e._v(" Assembler")]),e._v(" "),t("p",[e._v("TODO")]),e._v(" "),t("h3",{attrs:{id:"raw-storage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#raw-storage"}},[e._v("#")]),e._v(" Raw Storage")]),e._v(" "),t("p",[e._v("We first save all raw files before sending to pipeline-runner."),t("br"),e._v(" "),t("strong",[e._v("Pipeline-runner")]),e._v(" is a service that runs the data package pipelines. It is used to normalise and modify the data before it is displayed publicly")]),e._v(" "),t("ul",[t("li",[e._v("We use AWS S3 instance for storing data")])]),e._v(" "),t("h3",{attrs:{id:"package-storage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#package-storage"}},[e._v("#")]),e._v(" Package Storage")]),e._v(" "),t("p",[e._v("We store files after passing pipeline-runner")]),e._v(" "),t("ul",[t("li",[e._v("We use AWS S3 instance for storing data")])]),e._v(" "),t("h3",{attrs:{id:"bitstore"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bitstore"}},[e._v("#")]),e._v(" BitStore")]),e._v(" "),t("p",[e._v("We are preserving the data byte by byte.")]),e._v(" "),t("ul",[t("li",[e._v("We use AWS S3 instance for storing data")])]),e._v(" "),t("h3",{attrs:{id:"metastore"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#metastore"}},[e._v("#")]),e._v(" MetaStore")]),e._v(" "),t("p",[e._v("The MetaStore provides an integrated, searchable view over key metadata for end user services and users. Initially this metadata will just be metadata on datasets in the Package Store. In future it may expand to provide a unified to include other related metadata such as pipelines. It also includes summary metadata (or the ability to compute summary data) e.g. the total size of all your packages")]),e._v(" "),t("h4",{attrs:{id:"service-architecture"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#service-architecture"}},[e._v("#")]),e._v(" Service architecture")]),e._v(" "),t("Mermaid",{attrs:{id:"mermaid_382ee23f",graph:e.$dataBlock.mermaid_382ee23f}}),t("h3",{attrs:{id:"command-line-interface"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#command-line-interface"}},[e._v("#")]),e._v(" Command Line Interface")]),e._v(" "),t("p",[e._v("The command line interface.")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/datahq/datahub-cli",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/datahq/datahub-cli"),t("OutboundLink")],1)]),e._v(" "),t("h2",{attrs:{id:"domain-model"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#domain-model"}},[e._v("#")]),e._v(" Domain model")]),e._v(" "),t("p",[e._v("There are two main concepts to understand in DataHub domain model - "),t("a",{attrs:{href:"#profile"}},[e._v("Profile")]),e._v(" and "),t("a",{attrs:{href:"#data-package"}},[e._v("Package")])]),e._v(" "),t("Mermaid",{attrs:{id:"mermaid_64a570da",graph:e.$dataBlock.mermaid_64a570da}}),t("h3",{attrs:{id:"profile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#profile"}},[e._v("#")]),e._v(" Profile")]),e._v(" "),t("p",[e._v("Set of an authenticated and authorized entities like publishers and users. They are responsible for publishing, deleting or maintaining data on platform.")]),e._v(" "),t("p",[t("strong",[e._v("Important:")]),e._v(" Users do not have Data Packages, Publishers do. Users are "),t("em",[e._v("members")]),e._v(" of Publishers.")]),e._v(" "),t("h4",{attrs:{id:"publisher"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#publisher"}},[e._v("#")]),e._v(" Publisher")]),e._v(" "),t("p",[e._v("Publisher is an organization which “owns” Data Packages. Publisher may have zero or more Data Packages. Publisher may also have one or more user.")]),e._v(" "),t("h4",{attrs:{id:"user"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#user"}},[e._v("#")]),e._v(" User")]),e._v(" "),t("p",[e._v("User is an authenticated entity, that is member of Publisher organization, that can read, edit, create or delete data packages depending on their permissions.")]),e._v(" "),t("h4",{attrs:{id:"package"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#package"}},[e._v("#")]),e._v(" Package")]),e._v(" "),t("p",[e._v("A Data Package is a simple way of “packaging” up and describing data so that it can be easily shared and used. You can imagine as collection of data and and it’s meta-data ("),t("a",{attrs:{href:"http://frictionlessdata.io/guides/data-package/#datapackagejson",target:"_blank",rel:"noopener noreferrer"}},[e._v("datapackage.json"),t("OutboundLink")],1),e._v("), usually covering some concrete topic Eg: "),t("em",[e._v("“Gold Prices”")]),e._v(" or "),t("em",[e._v("“Population Growth Rate In My country”")]),e._v(" etc.")]),e._v(" "),t("p",[e._v("Each Data Package may have zero or more resources and one or more versions.")]),e._v(" "),t("p",[t("strong",[e._v("Resources")]),e._v(" - think like “tables” - Each can map to one or more physical files (usually just one). Think of a data table split into multiple CSV files on disk.")]),e._v(" "),t("p",[t("strong",[e._v("Version of a Data Package")]),e._v(" - similar to git commits and tags. People can mean different things by a “Version”:")]),e._v(" "),t("ul",[t("li",[e._v("Tag - Same as label or version - a nice human usable label e.g. "),t("em",[e._v("“v0.3”")]),e._v(", "),t("em",[e._v("“master”")]),e._v(", "),t("em",[e._v("“2013”")])]),e._v(" "),t("li",[e._v("Commit/Hash - Corresponds to the hash of datapackage.json, with that datapackage.json including all hashes of all data files")])]),e._v(" "),t("p",[e._v("We interpret Version as "),t("em",[e._v("“Tag”")]),e._v(" concept. "),t("em",[e._v("“Commit/Hash”")]),e._v(" is not supported")])],1)}),[],!1,null,null,null);"function"==typeof n&&n(s);a.default=s.exports}}]);