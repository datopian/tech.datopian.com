(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{363:function(e,a,t){"use strict";t.r(a);var r=t(18),n=function(e){e.options.__data__block__={mermaid_382ee14d:"graph TD\n\n  user[fa:fa-user User] --\x3e frontend[Frontend]\n  frontend --\x3e apiproxy[API Proxy]\n  frontend --\x3e bits[BitStore - S3]\n",mermaid_382ee169:"graph LR\n\ncloudflare --\x3e haproxy\n\nhaproxy --\x3e frontend\n\nsubgraph auth\n  postgres\n  authapp\nend\n\nsubgraph rawstore\n  rawobjstore\n  rawapp\nend\n\nsubgraph pkgstore\n  pkgobjstore\n  pkgapp\nend\n\nsubgraph metastore\n  elasticsearch\n  metastore\nend\n\nhaproxy --/auth--\x3e authapp\nhaproxy --/rawstore--\x3e rawapp\n\nhaproxy --\x3e pkgapp\nhaproxy --/metastore--\x3e metastore\n",mermaid_382ee185:"graph TD\n\n  user[fa:fa-user User]\n  bits[BitStore]\n  cloudflare[Cloudflare]\n\n  user --\x3e cloudflare\n  cloudflare --\x3e heroku\n  cloudflare --\x3e bits\n  heroku[Heroku - Flask] --\x3e rds[RDS Database]\n  heroku --\x3e bits\n",mermaid_382ee18c:"graph TD\n\n  user[fa:fa-user User] --\x3e cloudfront[Cloudfront]\n  cloudfront --\x3e apigateway[API Gateway]\n  apigateway --\x3e lambda[AWS Lambda - Flask via Zappa]\n  cloudfront --\x3e s3assets[S3 Assets]\n  lambda --\x3e rds[RDS Database]\n  lambda --\x3e bits[BitStore]\n  cloudfront --\x3e bits\n"}},o=Object(r.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"devops-production-deployment"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#devops-production-deployment"}},[e._v("#")]),e._v(" DevOps - Production Deployment")]),e._v(" "),t("p",[e._v("We use various cloud services for the platform, for example AWS S3 for storing data and metadata, and the application runs on Docker Cloud.")]),e._v(" "),t("p",[e._v("We have fully automated the deployment of the platform including the setup of all necessary services so that it is one command to deploy. Code and instructions here:")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/datahq/deploy",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/datahq/deploy"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("Below we provide a conceptual outline.")]),e._v(" "),t("h3",{attrs:{id:"outline-conceptually"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#outline-conceptually"}},[e._v("#")]),e._v(" Outline - Conceptually")]),e._v(" "),t("Mermaid",{attrs:{id:"mermaid_382ee14d",graph:e.$dataBlock.mermaid_382ee14d}}),t("h3",{attrs:{id:"new-structure"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#new-structure"}},[e._v("#")]),e._v(" New Structure")]),e._v(" "),t("p",[e._v("This diagram shows the current deployment architecture.")]),e._v(" "),t("Mermaid",{attrs:{id:"mermaid_382ee169",graph:e.$dataBlock.mermaid_382ee169}}),t("h3",{attrs:{id:"old-structures"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#old-structures"}},[e._v("#")]),e._v(" Old Structures")]),e._v(" "),t("h4",{attrs:{id:"heroku"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#heroku"}},[e._v("#")]),e._v(" Heroku")]),e._v(" "),t("Mermaid",{attrs:{id:"mermaid_382ee185",graph:e.$dataBlock.mermaid_382ee185}}),t("h4",{attrs:{id:"aws-lambda-flask-via-zappa"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aws-lambda-flask-via-zappa"}},[e._v("#")]),e._v(" AWS Lambda - Flask via Zappa")]),e._v(" "),t("p",[e._v("We are no longer using AWS and Heroku in this way. However, we have kept this for historical purposes and in case we return to any of them.")]),e._v(" "),t("Mermaid",{attrs:{id:"mermaid_382ee18c",graph:e.$dataBlock.mermaid_382ee18c}})],1)}),[],!1,null,null,null);"function"==typeof n&&n(o);a.default=o.exports}}]);