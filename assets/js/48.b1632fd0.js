(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{417:function(e,t,r){"use strict";r.r(t);var o=r(18),a=Object(o.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"how-to-use-the-developer-experience-dx-setup"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#how-to-use-the-developer-experience-dx-setup"}},[e._v("#")]),e._v(" How to Use the Developer Experience (DX) Setup")]),e._v(" "),r("h2",{attrs:{id:"repositories"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#repositories"}},[e._v("#")]),e._v(" Repositories")]),e._v(" "),r("h3",{attrs:{id:"dx-terraform"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#dx-terraform"}},[e._v("#")]),e._v(" dx-terraform")]),e._v(" "),r("p",[r("em",[r("a",{attrs:{href:"https://gitlab.com/datopian/experiments/dx-terraform",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://gitlab.com/datopian/experiments/dx-terraform"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("A Terraform project. Use it for provisioning Datopian’s Kubernetes cluster on Google Cloud.")]),e._v(" "),r("h3",{attrs:{id:"dx-argocd"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#dx-argocd"}},[e._v("#")]),e._v(" dx-argocd")]),e._v(" "),r("p",[r("em",[r("a",{attrs:{href:"https://gitlab.com/datopian/experiments/dx-argocd",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://gitlab.com/datopian/experiments/dx-argocd"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Helm Chart containing Argo CD. It monitors Git repositories with other Helm Charts, deploying, and maintaining them up-to-date in the Kubernetes cluster.")]),e._v(" "),r("p",[e._v("The folder "),r("code",[e._v("argo-cd")]),e._v(" is a copy of "),r("a",{attrs:{href:"https://github.com/argoproj/argo-helm/tree/master/charts/argo-cd",target:"_blank",rel:"noopener noreferrer"}},[e._v("the open source Helm Chart maintained by the community"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("h3",{attrs:{id:"dx-helm-template"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#dx-helm-template"}},[e._v("#")]),e._v(" dx-helm-template")]),e._v(" "),r("p",[r("em",[r("a",{attrs:{href:"https://gitlab.com/datopian/experiments/dx-helm-template",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://gitlab.com/datopian/experiments/dx-helm-template"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Template for projects meant to be deployed in the Kubernetes cluster.")]),e._v(" "),r("h3",{attrs:{id:"dx-helm-national-grid"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#dx-helm-national-grid"}},[e._v("#")]),e._v(" dx-helm-national-grid")]),e._v(" "),r("p",[r("em",[r("a",{attrs:{href:"https://gitlab.com/datopian/experiments/dx-helm-national-grid",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://gitlab.com/datopian/experiments/dx-helm-national-grid"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Helm Chart for National Grid. Use it for deploying it to a Kubernetes cluster.")]),e._v(" "),r("h2",{attrs:{id:"create-the-cluster"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#create-the-cluster"}},[e._v("#")]),e._v(" Create the Cluster")]),e._v(" "),r("p",[e._v("Before running applications in the cluster, you need something: a cluster.")]),e._v(" "),r("ol",[r("li",[e._v("Create a new Google Cloud project.")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://developers.google.com/accounts/docs/application-default-credentials",target:"_blank",rel:"noopener noreferrer"}},[e._v("Create a Service Account"),r("OutboundLink")],1),e._v(" inside this new project. It should have "),r("a",{attrs:{href:"https://github.com/terraform-google-modules/terraform-google-kubernetes-engine#configure-a-service-account",target:"_blank",rel:"noopener noreferrer"}},[e._v("the roles listed in the module’s documentation"),r("OutboundLink")],1),e._v(".\n"),r("ul",[r("li",[e._v("Cloud SQL Admin.")]),e._v(" "),r("li",[e._v("Compute Admin.")]),e._v(" "),r("li",[e._v("Compute Network Admin.")]),e._v(" "),r("li",[e._v("Compute Storage Admin")])])]),e._v(" "),r("li",[e._v("Download the credentials file (in JSON) for this service account.")]),e._v(" "),r("li",[e._v("Enable the following Google Cloud APIs:\n"),r("ul",[r("li",[r("a",{attrs:{href:"https://console.cloud.google.com/marketplace/product/google/composer.googleapis.com/overview",target:"_blank",rel:"noopener noreferrer"}},[e._v("Cloud Composer API"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://console.developers.google.com/apis/api/cloudresourcemanager.googleapis.com/overview",target:"_blank",rel:"noopener noreferrer"}},[e._v("Cloud Resource Manager API"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://console.developers.google.com/apis/api/sqladmin.googleapis.com/overview",target:"_blank",rel:"noopener noreferrer"}},[e._v("Cloud SQL Admin API"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://console.developers.google.com/apis/api/compute.googleapis.com/overview",target:"_blank",rel:"noopener noreferrer"}},[e._v("Compute Engine API"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://console.developers.google.com/apis/api/container.googleapis.com/overview",target:"_blank",rel:"noopener noreferrer"}},[e._v("Kubernetes Engine API"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://console.developers.google.com/apis/api/servicenetworking.googleapis.com/overview",target:"_blank",rel:"noopener noreferrer"}},[e._v("Service Networking API"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://console.cloud.google.com/networking/subnetworks/details/europe-west1/default",target:"_blank",rel:"noopener noreferrer"}},[e._v("Create Secondary IP ranges"),r("OutboundLink")],1),e._v(" for the selected network/region. "),r("em",[e._v("These values are based on the first cluster created with this Terraform setup.")]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("gke-ckan-cloud-cluster-pods     10.60.0.0/14\ngke-ckan-cloud-cluster-services 10.0.16.0/20\n")])])])]),e._v(" "),r("li",[e._v("Create a Terraform Cloud account.")]),e._v(" "),r("li",[e._v("Create a workspace.\n"),r("ol",[r("li",[e._v("Authorize GitLab. Terraform Cloud will monitor a repository containing the Terraform setup.")]),e._v(" "),r("li",[e._v("Select "),r("a",{attrs:{href:"https://gitlab.com/datopian/experiments/dx-terraform",target:"_blank",rel:"noopener noreferrer"}},[e._v("datopian/experiments/dx-terraform"),r("OutboundLink")],1),e._v(" as the workspace repository.")])])]),e._v(" "),r("li",[e._v("Customize Terraform variables following definitions in "),r("a",{attrs:{href:"https://gitlab.com/datopian/experiments/dx-terraform/-/blob/master/envs/dev/variables.tf",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("envs/dev/variables.tf")]),r("OutboundLink")],1),e._v(". The following ones are specially relevant when using a new Google Cloud project:"),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("project_id\ndatopian-dx\n\ncompute_engine_service_account\nterraformcloud@datopian-dx.iam.gserviceaccount.com\n\nregion\neurope-west1\n\nmaster_zone\neurope-west1-b\n")])])])]),e._v(" "),r("li",[e._v("In Terraform Cloud, create an environment variable called "),r("code",[e._v("GOOGLE_CREDENTIALS")]),e._v(" with the content of the Service Account JSON. Since it does not accept new line characters, you should remove them before. In VIM, do it with "),r("code",[e._v("%s;\\n; ;g")]),e._v(".")]),e._v(" "),r("li",[e._v("Set “Terraform Working Directory” to "),r("code",[e._v("envs/dev")]),e._v(" in "),r("a",{attrs:{href:"https://app.terraform.io/app/datopian/workspaces/dx/settings/general",target:"_blank",rel:"noopener noreferrer"}},[e._v("the settings"),r("OutboundLink")],1),e._v(".")])]),e._v(" "),r("h2",{attrs:{id:"install-argo-cd-in-the-cluster"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#install-argo-cd-in-the-cluster"}},[e._v("#")]),e._v(" Install Argo CD in the Cluster")]),e._v(" "),r("p",[e._v("We wrap projets meant to be deployed to the Kubernetes cluster using "),r("a",{attrs:{href:"https://helm.sh/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Helm Charts"),r("OutboundLink")],1),e._v(". "),r("a",{attrs:{href:"https://argoproj.github.io/argo-cd/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Argo CD"),r("OutboundLink")],1),e._v(" is a tool that monitors Git repositories for changes to these packages, and, when needed, creates new deployments with the latest versions.")]),e._v(" "),r("ol",[r("li",[e._v("From your local machine, install the "),r("a",{attrs:{href:"https://helm.sh/docs/intro/install/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Helm CLI"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("li",[e._v("From your local machine, connect your Docker Engine with the cluster in the cloud."),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("gcloud container clusters get-credentials ckan-cloud-cluster \\\n  --region=europe-west1 \\\n  --project=datopian-dx\n")])])])]),e._v(" "),r("li",[e._v("From your local machine, use the Helm CLI to install Argo in the cluster."),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("helm repo add argo https://argoproj.github.io/argo-helm\nhelm install my-release argo/argo-cd\n")])])])]),e._v(" "),r("li",[r("strong",[e._v("Temporarily, while we don’t expose Argo CD to the internet:")]),e._v(" Forward a local port to Argo CD Web UI:"),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("kubectl port-forward service/my-release-argocd-server -n default 8080:443\n")])])])]),e._v(" "),r("li",[e._v("The default username is "),r("code",[e._v("admin")]),e._v(", while the password is the name of the Pod running Argo CD. Get its value with the following command:"),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("kubectl get pods -n default -l app.kubernetes.io/name=argocd-server -o name | cut -d'/' -f 2\n")])])])])]),e._v(" "),r("p",[e._v("Now, Argo CD Web UI should be accessible in "),r("a",{attrs:{href:"https://localhost:8080/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://localhost:8080/"),r("OutboundLink")],1),e._v(".")])])}),[],!1,null,null,null);t.default=a.exports}}]);